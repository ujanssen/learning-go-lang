package main

import (
	"fmt"
	"os"
	"github.com/nilshell/xmlrpc"
)


type XenAPIClient struct {
	Session  interface{}
	Host     string
	Url      string
	Username string
	Password string
	RPC      *xmlrpc.Client
}

func NewXenAPIClient(host string) (client XenAPIClient) {
	client.Host = host
	client.Url = "http://" + host
	client.RPC, _ = xmlrpc.NewClient(client.Url, nil)
	return
}

type APIResult struct {
	Status           string
	Value            interface{}
	ErrorDescription string
}

type XenAPIObject struct {
	Ref    string
	Client *XenAPIClient
}

func (c *XenAPIClient) RPCCall(method string, params []interface{}) (resultValue interface{}, err error) {
    result := xmlrpc.Struct{}
    p := new(xmlrpc.Params)
    p.Params = params
    err = c.RPC.Call(method, *p, &result)
    if err != nil {
        fmt.Errorf("RPC Call Error: %s", err)
    } else {
        resultValue = result["Value"]
    }
    return resultValue, err
}

{{range .XapiObjects}}
{{ $objectName := .Name }}
// {{ .Description }}
{{range .Messages}}
{{ $message := . }}
func (client *XenAPIClient) {{$objectName}}_{{.Name}}({{range .Params}}{{.Name}} {{ .Type }},{{end}})  (resultValue interface{}, err error){
    params := make([]interface{}, {{ $message.ParamsLen }})
    {{range $index, $element := .Params }}
    params[{{$index}}] = {{$element.Name}}{{end}}

	return client.RPCCall("{{$objectName}}.{{.Name}}", params)
}
{{end}}{{end}}

const (
	XS_HOST   = "XS_HOST"
	XS_USER   = "XS_USER"
	XS_PASSWD = "XS_PASSWD"
)

func main() {
	fmt.Println("it compiles")
	host, user, passwd := os.Getenv(XS_HOST), os.Getenv(XS_USER), os.Getenv(XS_PASSWD)
	client := NewXenAPIClient(host)

	fmt.Println("NewXenAPIClient for: " + client.Host)
	fmt.Println("login_with_password: " + user + "/" + passwd)

	session, err := client.session_login_with_password(user, passwd, "", "")
	fmt.Printf("err: %v\n", err)
	fmt.Printf("session: %+v\n", session)

    vms, err := client.VM_get_all(session)
    fmt.Printf("err: %v\n", err)
    fmt.Printf("vms: %+v\n", vms)

    res, err := client.session_local_logout(session)
    fmt.Printf("err: %v\n", err)
    fmt.Printf("res: %+v\n", res)

 //    client.Username=user
 //    client.Password=passwd
	// err = client.Login()
	// fmt.Printf("err: %v\n", err)
	// fmt.Printf("session: %+v\n", client.Session)
}
